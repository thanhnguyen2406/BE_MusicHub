name: CI/CD Pipeline for Docker Image

on:
  push:
    branches:
      - main
      - features/**

env:
  SPRING_APPLICATION_NAME: ${{ secrets.SPRING_APPLICATION_NAME }}

  SECURITY_PERMIT_PATHS: ${{ secrets.SECURITY_PERMIT_PATHS }}
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  CORS_ALLOWED_METHODS: ${{ secrets.CORS_ALLOWED_METHODS }}
  CORS_ALLOWED_HEADERS: ${{ secrets.CORS_ALLOWED_HEADERS }}
  CORS_ALLOW_CREDENTIALS: ${{ secrets.CORS_ALLOW_CREDENTIALS }}

  SPRING_DATA_MONGODB_URI: ${{ secrets.SPRING_DATA_MONGODB_URI }}
  SPRING_DATA_MONGODB_USERNAME: ${{ secrets.SPRING_DATA_MONGODB_USERNAME }}
  SPRING_DATA_MONGODB_PASSWORD: ${{ secrets.SPRING_DATA_MONGODB_PASSWORD }}

  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  SERVER_CONTEXT_PATH: ${{ secrets.SERVER_CONTEXT_PATH }}

  JWT_ISSUER_URI: ${{ secrets.JWT_ISSUER_URI }}
  JWT_AUTH_CONVERTER_RESOURCE_ID: ${{ secrets.JWT_AUTH_CONVERTER_RESOURCE_ID }}
  JWT_AUTH_CONVERTER_PRINCIPLE_ATTRIBUTE: ${{ secrets.JWT_AUTH_CONVERTER_PRINCIPLE_ATTRIBUTE }}
  JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}

  KEYCLOAK_REALM: musicHub
  KEYCLOAK_CLIENT_ID: musicHub-reactive
  KEYCLOAK_CLIENT_SECRET: secret
  KEYCLOAK_DOMAIN: http://localhost:8081
  KEYCLOAK_URLS_AUTH: http://localhost:8081/realms/musicHub

  SERVER_RSOCKET_PORT: ${{ secrets.SERVER_RSOCKET_PORT }}
  SERVER_RSOCKET_MAPPING_PATH: ${{ secrets.SERVER_RSOCKET_MAPPING_PATH }}
  SERVER_RSOCKET_TRANSPORT: ${{ secrets.SERVER_RSOCKET_TRANSPORT }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start Keycloak in background
        run: |
          docker run -d --name keycloak -p 8081:8080 \
            -e KEYCLOAK_ADMIN=admin \
            -e KEYCLOAK_ADMIN_PASSWORD=admin \
            quay.io/keycloak/keycloak:24.0.1 start-dev

      - name: Wait for Keycloak to be healthy
        run: |
          echo "Waiting for Keycloak to be ready..."
          for i in {1..30}; do
            if curl -sSf http://localhost:8081/realms/master > /dev/null; then
              echo "Keycloak is up!"
              break
            fi
            sleep 5
          done

      - name: Set up Keycloak realm and client
        run: |
            docker exec keycloak /opt/keycloak/bin/kcadm.sh config credentials \
              --server http://localhost:8080 --realm master \
              --user admin --password admin
            
            docker exec keycloak /opt/keycloak/bin/kcadm.sh create realms \
              -s realm=musicHub -s enabled=true
            
            docker exec keycloak /opt/keycloak/bin/kcadm.sh create clients -r musicHub \
              -s clientId=musicHub-reactive \
              -s enabled=true \
              -s secret=secret \
              -s publicClient=false \
              -s standardFlowEnabled=true \
              -s directAccessGrantsEnabled=true \
              -s 'redirectUris=["*"]' \
              -s 'webOrigins=["*"]'
            
            docker exec keycloak /opt/keycloak/bin/kcadm.sh create roles -r musicHub -s name=USER

      - name: Build with Maven
        run: mvn clean package

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/music-hub:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/music-hub:latest