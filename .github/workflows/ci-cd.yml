name: CI/CD Pipeline for Docker Image

on:
  push:
    branches:
      - main
      - features/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start Keycloak in background
        run: |
          docker run -d --name keycloak -p 8081:8080 \
            -e KEYCLOAK_ADMIN=admin \
            -e KEYCLOAK_ADMIN_PASSWORD=admin \
            quay.io/keycloak/keycloak:24.0.1 start-dev

      - name: Wait for Keycloak to be healthy
        run: |
          echo "Waiting for Keycloak to be ready..."
          for i in {1..30}; do
            if curl -sSf http://localhost:8081/realms/master > /dev/null; then
              echo "Keycloak is up!"
              break
            fi
            sleep 5
          done

      - name: Set up Keycloak realm and client
        run: |
          curl -Lo kcadm.sh https://raw.githubusercontent.com/keycloak/keycloak/main/kc.sh
          chmod +x kcadm.sh
          ./kcadm.sh config credentials --server http://localhost:8081 --realm master --user admin --password admin
          
          ./kcadm.sh create realms -s realm=musicHub -s enabled=true
          ./kcadm.sh create clients -r musicHub -s clientId=musicHub-reactive -s enabled=true -s secret=secret \
            -s publicClient=false -s standardFlowEnabled=true -s directAccessGrantsEnabled=true \
            -s 'redirectUris=["*"]' -s 'webOrigins=["*"]'
          ./kcadm.sh create roles -r musicHub -s name=USER

      - name: Build with Maven
        run: mvn clean package

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/music-hub:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/music-hub:latest